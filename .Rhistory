names(secondHalf) <- wday(secondHalf, label = T)
secondHalf <- subset(secondHalf, names(secondHalf) %in% validDays)
distFromBAFH <- sapply(secondHalf, function(x){
as.integer(difftime(x, possibleDates, units = "days"))
})
names(distFromBAFH) <- secondHalf
distFromBAFH <- distFromBAFH[distFromBAFH >= 13 & distFromBAFH <= 17] %>% names
x[, c(distFromBAFH[1], possibleDates[1])] <- x$QuantidadeEventos
},
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
possibleDates <- period[which(names(sort(colSums(x[10:ncol(x)])))[1] %in% period)]
firstHalf <- period[1:floor(length(period)/2)]
names(firstHalf) <- wday(firstHalf, label = T)
firstHalf <- subset(firstHalf, names(firstHalf) %in% validDays)
secondHalf <- period[(floor(length(period)/2)+1):length(period)]
names(secondHalf) <- wday(secondHalf, label = T)
secondHalf <- subset(secondHalf, names(secondHalf) %in% validDays)
distFromBAFH <- sapply(secondHalf, function(x){
as.integer(difftime(x, possibleDates, units = "days"))
})
names(distFromBAFH) <- secondHalf
distFromBAFH <- distFromBAFH[distFromBAFH >= 13 & distFromBAFH <= 17] %>% names
x[, c(distFromBAFH[1], possibleDates[1])] <- x$QuantidadeEventos
}
)
},
ifelse(x$FrequenciaDia == 30 | x$FrequenciaDia == 31,
{
ifelse(length(df) == 0,
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
possibleDates <- period[which(names(x[10:ncol(x)])[1] %in% period)]
x[,possibleDates] <- x$QuantidadeEventos
print(possibleDates)
},
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
possibleDates <- period[which(names(sort(colSums(x[10:ncol(x)])))[1] %in% period)]
x[,possibleDates] <- x$QuantidadeEventos
print(possibleDates)
}
)
},
print("END")
)
)
)
)
return(as.data.frame(x))
}
View(do.call(rbind, dfList))
##Also Working
dfList <- list()
for(i in 1:length(splitted)) {
df <- list()
for(k in 1:nrow(splitted[[i]])){
processedData <- myotherfunction(splitted[[i]][k, ], df)
df[[k]] <- processedData
}
dfList[[i]] <- do.call(rbind, df)
}
period
class(period)
sample(x = period, 1)
sample(x = period, 1)
sample(x = period, 1)
sample(x = period, 1)
sample(x = period, 1)
sample(x = period, 1)
sample(x = period, 1)
sample(x = period, 1)
sample(x = period, 1)
sample(x = period, 1)
sample(x = period, 1)
sample(x = period, 1)
sample(x = period, 1)
as.character(seq.Date(as.Date("2017-11-01"), as.Date("2017-11-30"), 1)) %>% wday(label=T)
as.character(seq.Date(as.Date("2017-11-01"), as.Date("2017-11-30"), 1)) %>% wday(label=T) %>% select(-"Sun")
as.character(seq.Date(as.Date("2017-11-01"), as.Date("2017-11-30"), 1)) %>% wday(label=T) %>% which(. %in% validDays)
as.character(seq.Date(as.Date("2017-11-01"), as.Date("2017-11-30"), 1)) %>% wday(label=T) %>% which(validDays %in% .)
as.character(seq.Date(as.Date("2017-11-01"), as.Date("2017-11-30"), 1)) %>% wday(label=T) %>% arrayInd()
as.character(seq.Date(as.Date("2017-11-01"), as.Date("2017-11-30"), 1)) %>% wday(label=T) %in% validDays
possibleDates <- period[period %>% wday(label=T) %in% validDays]
possibleDates
period[period %>% wday(label=T) %in% validDays] %>% sample(1)
period[period %>% wday(label=T) %in% validDays] %>% sample(1)
period[period %>% wday(label=T) %in% validDays] %>% sample(1)
period[period %>% wday(label=T) %in% validDays] %>% sample(1)
period[period %>% wday(label=T) %in% validDays] %>% sample(1)
period[period %>% wday(label=T) %in% validDays] %>% sample(1)
period[period %>% wday(label=T) %in% validDays] %>% sample(1)
period[period %>% wday(label=T) %in% validDays] %>% sample(1)
period[period %>% wday(label=T) %in% validDays] %>% sample(1)
period[period %>% wday(label=T) %in% validDays] %>% sample(1)
period[period %>% wday(label=T) %in% validDays] %>% sample(1)
period[period %>% wday(label=T) %in% validDays] %>% sample(1)
myotherfunction <- function(x, df){
ifelse(x$FrequenciaDia == 1,
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
x[,period] <- x$QuantidadeEventos
},
ifelse(x$FrequenciaDia == 7,
{
print(dim(x))
},
ifelse(x$FrequenciaDia == 15 | x$FrequenciaDia == 16,
{
ifelse(length(df) == 0,
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
validDays <- c("Mon", "Tues", "Wed", "Thurs", "Fri")
firstHalf <- period[1:floor(length(period)/2)]
possibleDates <- firstHalf[firstHalf %>% wday(label=T) %in% validDays] %>% sample(1)
names(firstHalf) <- wday(firstHalf, label = T)
firstHalf <- subset(firstHalf, names(firstHalf) %in% validDays)
secondHalf <- period[(floor(length(period)/2)+1):length(period)]
names(secondHalf) <- wday(secondHalf, label = T)
secondHalf <- subset(secondHalf, names(secondHalf) %in% validDays)
distFromBAFH <- sapply(secondHalf, function(x){
as.integer(difftime(x, possibleDates, units = "days"))
})
names(distFromBAFH) <- secondHalf
distFromBAFH <- distFromBAFH[distFromBAFH >= 13 & distFromBAFH <= 17] %>% names
x[, c(distFromBAFH[1], possibleDates[1])] <- x$QuantidadeEventos
},
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
possibleDates <- period[which(names(sort(colSums(x[10:ncol(x)])))[1] %in% period)]
validDays <- c("Mon", "Tues", "Wed", "Thurs", "Fri")
firstHalf <- period[1:floor(length(period)/2)]
names(firstHalf) <- wday(firstHalf, label = T)
firstHalf <- subset(firstHalf, names(firstHalf) %in% validDays)
secondHalf <- period[(floor(length(period)/2)+1):length(period)]
names(secondHalf) <- wday(secondHalf, label = T)
secondHalf <- subset(secondHalf, names(secondHalf) %in% validDays)
distFromBAFH <- sapply(secondHalf, function(x){
as.integer(difftime(x, possibleDates, units = "days"))
})
names(distFromBAFH) <- secondHalf
distFromBAFH <- distFromBAFH[distFromBAFH >= 13 & distFromBAFH <= 17] %>% names
x[, c(distFromBAFH[1], possibleDates[1])] <- x$QuantidadeEventos
}
)
},
ifelse(x$FrequenciaDia == 30 | x$FrequenciaDia == 31,
{
ifelse(length(df) == 0,
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
validDays <- c("Mon", "Tues", "Wed", "Thurs", "Fri")
possibleDates <- period[period %>% wday(label=T) %in% validDays] %>% sample(1)
x[,possibleDates] <- x$QuantidadeEventos
print(possibleDates)
},
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
possibleDates <- period[which(names(sort(colSums(x[10:ncol(x)])))[1] %in% period)]
x[,possibleDates] <- x$QuantidadeEventos
print(possibleDates)
}
)
},
print("END")
)
)
)
)
return(as.data.frame(x))
}
##Also Working
dfList <- list()
for(i in 1:length(splitted)) {
df <- list()
for(k in 1:nrow(splitted[[i]])){
processedData <- myotherfunction(splitted[[i]][k, ], df)
df[[k]] <- processedData
}
dfList[[i]] <- do.call(rbind, df)
}
View(do.call(rbind, dfList))
View(do.call(rbind, dfList) %>% subset(FrequenciaDia == 15 | FrequenciaDia == 30))
length(dfList)
View(dfList[[1]])
xxxxx <- arrange(differentDay, Latitude, Longitude) %>% split(seq_len(nrow(differentDay)) %/% 5)
dfList <- list()
for(i in 1:length(xxxxx)) {
df <- list()
for(k in 1:nrow(xxxxx[[i]])){
processedData <- myotherfunction(xxxxx[[i]][k, ], df)
df[[k]] <- processedData
}
dfList[[i]] <- do.call(rbind, df)
}
myotherfunction <- function(x, df){
ifelse(x$FrequenciaDia == 1,
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
x[,period] <- x$QuantidadeEventos
},
ifelse(x$FrequenciaDia == 7,
{
print(dim(x))
},
ifelse(x$FrequenciaDia == 15 | x$FrequenciaDia == 16,
{
ifelse(length(df) == 0,
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
validDays <- c("Mon", "Tues", "Wed", "Thurs", "Fri")
firstHalf <- period[1:floor(length(period)/2)]
possibleDates <- firstHalf[firstHalf %>% wday(label=T) %in% validDays] %>% sample(1)
names(firstHalf) <- wday(firstHalf, label = T)
firstHalf <- subset(firstHalf, names(firstHalf) %in% validDays)
secondHalf <- period[(floor(length(period)/2)+1):length(period)]
names(secondHalf) <- wday(secondHalf, label = T)
secondHalf <- subset(secondHalf, names(secondHalf) %in% validDays)
distFromBAFH <- sapply(secondHalf, function(x){
as.integer(difftime(x, possibleDates, units = "days"))
})
names(distFromBAFH) <- secondHalf
distFromBAFH <- distFromBAFH[distFromBAFH >= 13 & distFromBAFH <= 17] %>% names
x[, c(distFromBAFH[1], possibleDates[1])] <- x$QuantidadeEventos
},
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
possibleDates <- period[which(names(sort(colSums(x[10:ncol(x)])))[1] %in% period)]
validDays <- c("Mon", "Tues", "Wed", "Thurs", "Fri")
firstHalf <- period[1:floor(length(period)/2)]
names(firstHalf) <- wday(firstHalf, label = T)
firstHalf <- subset(firstHalf, names(firstHalf) %in% validDays)
secondHalf <- period[(floor(length(period)/2)+1):length(period)]
names(secondHalf) <- wday(secondHalf, label = T)
secondHalf <- subset(secondHalf, names(secondHalf) %in% validDays)
distFromBAFH <- sapply(secondHalf, function(x){
as.integer(difftime(x, possibleDates, units = "days"))
})
names(distFromBAFH) <- secondHalf
distFromBAFH <- distFromBAFH[distFromBAFH >= 13 & distFromBAFH <= 17] %>% names
x[, c(distFromBAFH[1], possibleDates[1])] <- x$QuantidadeEventos
}
)
},
ifelse(x$FrequenciaDia == 30 | x$FrequenciaDia == 31,
{
ifelse(length(df) == 0,
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
validDays <- c("Mon", "Tues", "Wed", "Thurs", "Fri")
possibleDates <- period[period %>% wday(label=T) %in% validDays] %>% sample(1)
x[,possibleDates] <- x$QuantidadeEventos
print(possibleDates)
},
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
possibleDates <- period[which(names(sort(colSums(x[10:ncol(x)])))[1] %in% period)]
x[,possibleDates] <- x$QuantidadeEventos
print(possibleDates)
}
)
},
print("END")
)
)
)
)
return(as.data.frame(x))
}
dfList <- list()
for(i in 1:length(xxxxx)) {
df <- list()
for(k in 1:nrow(xxxxx[[i]])){
processedData <- myotherfunction(xxxxx[[i]][k, ], df)
df[[k]] <- processedData
}
dfList[[i]] <- do.call(rbind, df)
}
View(dfList[[1]])
View(dfList[[2]])
View(dfList[[3]])
View(dfList[[3]])
myotherfunction <- function(x, df){
ifelse(x$FrequenciaDia == 1,
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
x[,period] <- x$QuantidadeEventos
},
ifelse(x$FrequenciaDia == 7,
{
ifelse(x$QuantidadeEventos == 6,
{
print(6)
},
ifelse(x$QuantidadeEventos == 5,
{
print(5)
},
ifelse(x$QuantidadeEventos == 4,
{
print(4)
},
ifelse(x$QuantidadeEventos == 3,
{
print(3)
},
ifelse(x$QuantidadeEventos == 2,
{
print(2)
},
{
print(1)
}
)
)
)
)
)
},
ifelse(x$FrequenciaDia == 15 | x$FrequenciaDia == 16,
{
ifelse(length(df) == 0,
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
validDays <- c("Mon", "Tues", "Wed", "Thurs", "Fri")
firstHalf <- period[1:floor(length(period)/2)]
possibleDates <- firstHalf[firstHalf %>% wday(label=T) %in% validDays] %>% sample(1)
names(firstHalf) <- wday(firstHalf, label = T)
firstHalf <- subset(firstHalf, names(firstHalf) %in% validDays)
secondHalf <- period[(floor(length(period)/2)+1):length(period)]
names(secondHalf) <- wday(secondHalf, label = T)
secondHalf <- subset(secondHalf, names(secondHalf) %in% validDays)
distFromBAFH <- sapply(secondHalf, function(x){
as.integer(difftime(x, possibleDates, units = "days"))
})
names(distFromBAFH) <- secondHalf
distFromBAFH <- distFromBAFH[distFromBAFH >= 13 & distFromBAFH <= 17] %>% names
x[, c(distFromBAFH[1], possibleDates[1])] <- x$QuantidadeEventos
},
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
possibleDates <- period[which(names(sort(colSums(x[10:ncol(x)])))[1] %in% period)]
validDays <- c("Mon", "Tues", "Wed", "Thurs", "Fri")
firstHalf <- period[1:floor(length(period)/2)]
names(firstHalf) <- wday(firstHalf, label = T)
firstHalf <- subset(firstHalf, names(firstHalf) %in% validDays)
secondHalf <- period[(floor(length(period)/2)+1):length(period)]
names(secondHalf) <- wday(secondHalf, label = T)
secondHalf <- subset(secondHalf, names(secondHalf) %in% validDays)
distFromBAFH <- sapply(secondHalf, function(x){
as.integer(difftime(x, possibleDates, units = "days"))
})
names(distFromBAFH) <- secondHalf
distFromBAFH <- distFromBAFH[distFromBAFH >= 13 & distFromBAFH <= 17] %>% names
x[, c(distFromBAFH[1], possibleDates[1])] <- x$QuantidadeEventos
}
)
},
ifelse(x$FrequenciaDia == 30 | x$FrequenciaDia == 31,
{
ifelse(length(df) == 0,
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
validDays <- c("Mon", "Tues", "Wed", "Thurs", "Fri")
possibleDates <- period[period %>% wday(label=T) %in% validDays] %>% sample(1)
x[,possibleDates] <- x$QuantidadeEventos
print(possibleDates)
},
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
possibleDates <- period[which(names(sort(colSums(x[10:ncol(x)])))[1] %in% period)]
x[,possibleDates] <- x$QuantidadeEventos
print(possibleDates)
}
)
},
print("END")
)
)
)
)
return(as.data.frame(x))
}
##Working
k <- lapply(splitted, function(x){
lapply(pmap(x, list), function(y){
y <- unlist(y)
myfunction(y)
})
})
k <- do.call(rbind, lapply(k, function(x){
as.data.frame(do.call(rbind, x))
}))
##Also Working
dfList <- list()
for(i in 1:length(xxxxx)) {
df <- list()
for(k in 1:nrow(xxxxx[[i]])){
processedData <- myotherfunction(xxxxx[[i]][k, ], df)
df[[k]] <- processedData
}
dfList[[i]] <- do.call(rbind, df)
}
myotherfunction <- function(x, df){
ifelse(x$FrequenciaDia == 1,
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
x[,period] <- x$QuantidadeEventos
},
ifelse(x$FrequenciaDia == 7,
{
ifelse(x$QuantidadeEventos == 6,
{
print(6)
},
ifelse(x$QuantidadeEventos == 5,
{
print(5)
},
ifelse(x$QuantidadeEventos == 4,
{
print(4)
},
ifelse(x$QuantidadeEventos == 3,
{
print(3)
},
ifelse(x$QuantidadeEventos == 2,
{
print(2)
},
{
print(1)
}
)
)
)
)
)
},
ifelse(x$FrequenciaDia == 15 | x$FrequenciaDia == 16,
{
ifelse(length(df) == 0,
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
validDays <- c("Mon", "Tues", "Wed", "Thurs", "Fri")
firstHalf <- period[1:floor(length(period)/2)]
possibleDates <- firstHalf[firstHalf %>% wday(label=T) %in% validDays] %>% sample(1)
names(firstHalf) <- wday(firstHalf, label = T)
firstHalf <- subset(firstHalf, names(firstHalf) %in% validDays)
secondHalf <- period[(floor(length(period)/2)+1):length(period)]
names(secondHalf) <- wday(secondHalf, label = T)
secondHalf <- subset(secondHalf, names(secondHalf) %in% validDays)
distFromBAFH <- sapply(secondHalf, function(x){
as.integer(difftime(x, possibleDates, units = "days"))
})
names(distFromBAFH) <- secondHalf
distFromBAFH <- distFromBAFH[distFromBAFH >= 13 & distFromBAFH <= 17] %>% names
x[, c(distFromBAFH[1], possibleDates[1])] <- x$QuantidadeEventos
},
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
possibleDates <- period[which(names(sort(colSums(x[10:ncol(x)])))[1] %in% period)]
validDays <- c("Mon", "Tues", "Wed", "Thurs", "Fri")
firstHalf <- period[1:floor(length(period)/2)]
names(firstHalf) <- wday(firstHalf, label = T)
firstHalf <- subset(firstHalf, names(firstHalf) %in% validDays)
secondHalf <- period[(floor(length(period)/2)+1):length(period)]
names(secondHalf) <- wday(secondHalf, label = T)
secondHalf <- subset(secondHalf, names(secondHalf) %in% validDays)
distFromBAFH <- sapply(secondHalf, function(x){
as.integer(difftime(x, possibleDates, units = "days"))
})
names(distFromBAFH) <- secondHalf
distFromBAFH <- distFromBAFH[distFromBAFH >= 13 & distFromBAFH <= 17] %>% names
x[, c(distFromBAFH[1], possibleDates[1])] <- x$QuantidadeEventos
}
)
},
ifelse(x$FrequenciaDia == 30 | x$FrequenciaDia == 31,
{
ifelse(length(df) == 0,
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
validDays <- c("Mon", "Tues", "Wed", "Thurs", "Fri")
possibleDates <- period[period %>% wday(label=T) %in% validDays] %>% sample(1)
x[,possibleDates] <- x$QuantidadeEventos
},
{
period <- as.character(seq.Date(x$InicioPeriodo, x$FimPeriodo, 1))
possibleDates <- period[which(names(sort(colSums(x[10:ncol(x)])))[1] %in% period)]
x[,possibleDates] <- x$QuantidadeEventos
}
)
},
print("END")
)
)
)
)
return(as.data.frame(x))
}
##Also Working
dfList <- list()
for(i in 1:length(xxxxx)) {
df <- list()
for(k in 1:nrow(xxxxx[[i]])){
processedData <- myotherfunction(xxxxx[[i]][k, ], df)
df[[k]] <- processedData
}
dfList[[i]] <- do.call(rbind, df)
}
